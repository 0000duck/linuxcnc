#!/bin/sh

usage(){
    echo "no RTL or RTAI installations found, not configuring Makefile.inc"
    echo "If you have RTL or RTAI installed in a different path, use :"
    echo
    echo "Syntax: configure rtdir=[path to rtai or rtlinux]"
    echo
    exit -1
}

echo

# Test for command line arg.
if [ "$1" = "" ] ; then
# None found, so search for likely files..
    RTS=$(find /usr/src/ -maxdepth 2 -name "rtl.mk" -o -name ".buildvars" 2> /dev/null)
# Found something, so check for rtl.mk
    if [ "$RTS" = "" ] ; then
	usage
	exit 1
    fi
    for rtl in $RTS ; do
        RTL=$(echo $rtl | grep rtl.mk | sed s^/rtl.mk^^g)
        if [ "$RTL" != "" ] ; then
	    RTDIR=$RTL
	fi
    done
    if [ "$RTDIR" = "" ] ; then
# or .buildvars
	for rtai in $RTS ; do
	    RTAI=$(echo $rtai | grep buildvars | sed s^/.buildvars^^g)
	    if [ "$RTAI" != "" ] ; then
		RTDIR=$RTAI
	    fi
	done
    fi
    else
# So we had an arg, set RTDIR...
    if [ "$1" != "" ] ; then
	if [ "$(echo $1 | awk '{split($1, A, "=")}{print A[1]}')" != "rtdir" ] ; then
# and if it is not rtdir=/foo, it must be a cry for help !
	    usage
	    exit -1
	fi
	RTDIR=$(echo $1 | awk '{split($1, A, "=")}{print A[2]}')

#' A quick'n'dirty hack just in case we were passed a relative path.
# As noted by Jonathan Stark, makes will fail further up the tree
# when a -I../foo is encountered.
	RTDIR=$(cd $RTDIR ; pwd -P )
	echo $RTDIR
    fi
fi

if [ ! -f $RTDIR/rtl.mk ] ; then
    if [ ! -f $RTDIR/.buildvars ] ; then
# If no rtai or rtlinux signatures found, then exit..
        usage
	exit -1
    fi
fi

# Go on to write out the Makefile.inc


echo "# DO NOT EDIT THIS FILE ! Automatically generated by $0 $1" >Makefile.inc
echo >> Makefile.inc
echo "# Makefile add-ons from ./configure" >> Makefile.inc
echo >> Makefile.inc
echo "# Directories" >> Makefile.inc
echo "# -----------" >> Makefile.inc
echo >> Makefile.inc
echo "EMC2_HOME = $(pwd)" >> Makefile.inc
echo "BIN_DIR = \$(EMC2_HOME)/bin" >> Makefile.inc
echo "LIB_DIR = \$(EMC2_HOME)/lib" >> Makefile.inc
echo "RTLIB_DIR = \$(EMC2_HOME)/rtlib" >> Makefile.inc
echo "INC_DIR = \$(EMC2_HOME)/include" >> Makefile.inc
echo "RTDIR = $RTDIR" >> Makefile.inc
echo >> Makefile.inc
echo "# Default rules in Make.rules to be included in all makefiles" >> Makefile.inc
echo "include \$(EMC2_HOME)/Make.rules" >> Makefile.inc

echo >> Makefile.inc
echo >> Makefile.inc
if [ -f $RTDIR/.buildvars ] ; then
    RTFILE=$RTDIR/.buildvars
    echo found an RTAI installation in $RTDIR
    echo "RTNAME=rtai" >> Makefile.inc
    echo "RTPREFIX=rtai" >> Makefile.inc
    echo "RTAI = 1" >> Makefile.inc
    KERNEL=$(cat $RTFILE | grep LINUXDIR | awk '{split($1, A, "=")}{print A[2]}') 2> /dev/null
#'
    KERNELDIR=$(cd $KERNEL ; pwd -P )
else
    if [ -f $RTDIR/rtl.mk ] ; then
        RTFILE=$RTDIR/rtl.mk
        echo found an RTLinux installation in $RTDIR
        echo "RTNAME=RTLinux" >> Makefile.inc
        echo "RTPREFIX=rtl" >> Makefile.inc
        echo "RTLINUX = 1" >> Makefile.inc
    KERNEL=$(cat $RTFILE | grep LINUXDIR | awk '{split($1, A, "=")}{print A[2]}') 2> /dev/null
#'
    KERNELDIR=$(cd $KERNEL ; pwd -P )
    fi
fi
echo "KERNELDIR = $KERNELDIR" >> Makefile.inc
cat $RTFILE | grep CFLAGS | sed s/CFLAGS/RTFLAGS/ >> Makefile.inc
echo "RTFLAGS := -I\$(INC_DIR) -I$RTDIR/include -I. \$(RTFLAGS) -DRTAPI" >> Makefile.inc
CC=$(cat $RTFILE | grep CC | awk '{split($1, A, "=")}{print A[2]}') 2> /dev/null
#'
if [ $CC="" ] ; then
    CC=cc
fi

# RTAI doesn't like gcc 2.96
$CC -v 2> configure.tmp
CCVER=$(cat configure.tmp | grep version)
if [ "$(echo $CCVER | grep 2.96)" ] ; then
    echo "RTAI doesn't like $CCVER"
    echo "Looking for alternate"
    egcs -v 2> configure.tmp
    CCVER=$(cat configure.tmp | grep version)
    if [ "$CCVER" ] ; then
        echo "Found egcs = $CCVER"
        CC=egcs
    else
        echo "Uh oh, couldn't find alternate compiler"
	echo " Please make sure kgcc from the compat-egcs package is installed"
	echo " and the kernel & realtime extensions where compiled with it."
        exit -1
    fi
fi
rm -f configure.tmp

if [ $RTFILE = "$RTDIR/rtl.mk" ] ; then
    echo "ULFLAGS = -Wall -g -I\$(INC_DIR) -I\$(INCLUDE) -I. -DULAPI -O2" >> Makefile.inc
    echo "RTAPI = \$(RTLIB_DIR)/rtl_rtapi.o" >> Makefile.inc
    echo "ULAPI = \$(LIB_DIR)/rtl_ulapi.o" >> Makefile.inc
else
    echo "ULFLAGS = -Wall -g -I\$(INC_DIR) -I$RTDIR/include -I. -DULAPI -O2" >> Makefile.inc
    echo "RTAPI = \$(RTLIB_DIR)/rtai_rtapi.o" >> Makefile.inc
    echo "ULAPI = \$(LIB_DIR)/rtai_ulapi.o" >> Makefile.inc
fi

echo "CC = $CC" >> Makefile.inc
echo >> Makefile.inc
echo "# Additional flags and settings from $RTFILE" >> Makefile.inc
echo >> Makefile.inc
cat $RTFILE | grep -v CFLAGS | grep -v CC >> Makefile.inc
echo >> Makefile.inc

if [ "$1" = "" ] ; then
    echo
    echo "If $RTDIR"
    echo " does not contain your working realtime directory, use:"
    echo "./configure rtdir=$RTDIR"
    echo
fi

for i in bin include lib rtlib ; do
 if [ ! -d $i ] ; then
   mkdir $i
 fi
done

# terminate normally
exit 0

