Incorporation of linuxcnc-features into LinuxCNC git tree

Features components in the LinuxCNC git tree:
  1) share/features/ ---------------------- all non-program components
  2) lib/python/gladevcp/features.py ------ 'the main program'
  3) configs/sim/axis/features_demo/ ------ axis gui demos
     configs/sim/gmoccapy/features_demo/ -- gmoccapy gui demos
  4) bin/features ------------------------- copied (by make) from features.py

Notes:
  1) Inifiles must specify a directory [DISPLAY]FEATURES_DIR
     for 'features' subdirs (In sim configs, this dir is named './myfeatures')

  2) Inifiles must specify a [RS274NGC]SUBROUTINE_PATH that includes
     the 'features' lib (e.g, [DISPLAY]FEATURES + '/lib' which is
     named ./myfeatures/lib in the sim configurations)

  3) Embedding in a gui from an inifile:
     For axis gui, use:
         [DISPLAY]GLADEVCP = -U --catalog=mill  ./myfeatures/features.ui

     For gmoccapy gui, use:
         [DISPLAY]EMBED_TAB_COMMAND = gladevcp -x {XID} -U \
                                    --catalog=mill ./myfeatures/features.ui

     Catalogs available are: mill and lathe.
     ./myfeatures is a subdirectory for local 'features' subdirs and files.
     ./myfeatures/features.ui is a 'features' gladevcp configuration file,
     A system reference is at: share/features/features.ui

  4) The initial startup of 'features' embedded in a LinuxCNC gui will
     copy system 'features' files to the [DISPLAY]FEATURES_DIR.  Subsequent
     startups will copy new 'features' files if they are available (due
     to a LinuxCNC version update for instance).  If the user has modified
     the local files, a dialog will indicate that the modified files
     must be renamed or removed in order to receive system file updates.

  5) A contributor using a Run-In-Place (RIP) build can copy locally modified
     files back to the appropriate share/features/ subdirectory to
     make a patch.  Users runnning a DEB install can offer locally modified
     'features' file to a cooperating contributor to make a patch
     using a RIP install.

  6) To use 'features as a standalone application, start from the command
     line:  $ features [Options]

     If an inifile is specified, it should satisfy the usual inifile
     requirements as indicated above.  If no inifile is specified,
     the current working directory will be used.  For this case, the
     first use of the 'features' application will request user
     permission to copy system 'features' files to the working directory.

     Reference:
     $ features --help
     Standalone Usage:
        features [Options]

     Options:
        -h | --help                        this text
        -i inifilename | --ini=inifilename inifile for standalone

     Notes:
       For standalone usage:
          a) Specify an inifile name which specifies [DISPLAY]FEATURES_DIR
       or
          b) Start in a working directory with pre-existing Features subdirs
             !!!If Features subdirs are not present, they will be created

-------------------------------------------------------------------------------
Authors:
  Nick Drobchenko - Nick from both cnc-club.ru and linuxcnc.org forums,
  Fernand Veilleux - FernV from linuxcnc.org forum,
  Sergey - verser from both cnc-club.ru and linuxcnc.org forums,
  Meison Kim, Alexander Wigen, Konstantin Navrockiy, Fernand Veilleux.
