# EMC controller parameters for generic controller. Make these what you need
# for your system.

# General note: Comments can either be preceded with a # or ; - either is
# acceptable, although # is in keeping with most linux config files.

# General section -------------------------------------------------------------
[EMC]

# Version of this INI file
VERSION =               $Revision$

# Name of machine, for use with display, etc.
MACHINE =               EMC-HAL

# Name of NML file to use, default is emc.nml
NML_FILE =              configs/emc.nml

# Debug level, 0 means no messages. See emc/src/emcnml/emcglb.h for others
#DEBUG =                 0x00000003
# DEBUG =               0x00000007
DEBUG =               0x7FFFFFFF

# Sections for display options ------------------------------------------------
[DISPLAY]

# Name of display program, e.g., xemc
DISPLAY =             tkemc
# DISPLAY =               usrmot

# Cycle time, in seconds, that display will sleep between polls
CYCLE_TIME =            0.200

# Path to help file
HELP_FILE =             doc/help.txt

# Initial display setting for position, RELATIVE or MACHINE
POSITION_OFFSET =       RELATIVE

# Initial display setting for position, COMMANDED or ACTUAL
POSITION_FEEDBACK =     ACTUAL

# Highest value that will be allowed for feed override, 1.0 = 100%
MAX_FEED_OVERRIDE =     1.2

# Prefix to be used
PROGRAM_PREFIX =        programs/

# Introductory graphic
INTRO_GRAPHIC = emc.gif
INTRO_TIME = 5

# Task controller section -----------------------------------------------------
[TASK]

# Name of task controller program, e.g., bridgeporttask
TASK =                  milltask
# TASK =                minimilltask

# Cycle time, in seconds, that task controller will sleep between polls
CYCLE_TIME =            0.010

# Part program interpreter section --------------------------------------------
[RS274NGC]

# File containing interpreter variables
PARAMETER_FILE =        configs/emc.var

# Motion control section ------------------------------------------------------
[EMCMOT]

EMCMOT =              motmod.o

# Key for real OS shared memory, e.g., for simulated motion
SHMEM_KEY =             101

# Timeout for comm to emcmot, in seconds
COMM_TIMEOUT =          1.0

# Interval between tries to emcmot, in seconds
COMM_WAIT =             0.010

# Base task period, in seconds - this is the fastest thread in the machine
BASE_PERIOD =                0.000050
# Servo task period, in seconds - will be rounded to an integer multiple
#   of BASE_PERIOD
SERVO_PERIOD =               0.001000
# Trajectory Planner task period, in seconds - will be rounded to an
#   integer multiple of SERVO_PERIOD
TRAJ_PERIOD =                0.010000

# Hardware Abstraction Layer section --------------------------------------------------
[HAL]

# The run script first uses halcmd to execute any HALFILE
# files, and then to execute any individual HALCMD commands.
#
# NOTE: Once the new version of inivar (with the -num option)
# is ported over to the main branch, the HALFILEMAX and HALFILEn
# cruft can go away, replaced by as many HALFILE lines as are
# needed for any particular configuration.

# maximum number of HAL config files
HALFILEMAX =                  10
# list of hal config files to run through halcmd
# files are executed in order, HALFILE1 to HALFILE<HALFILEMAX>
HALFILE1 =                    core_stepper.hal
#HALFILE2 =                    xylotex_pinout.hal
HALFILE2 =                    standard_pinout.hal
# HALFILE3 =                    simulated_limits.hal

# maximum number of HALCMD commands
HALCMDMAX =                  10
# list of halcmd commands to execute
# commands are executed in order, HALCMD1 to HALCMD<HALCMDMAX>
#HALCMD1 =                    save neta

# Trajectory planner section --------------------------------------------------
[TRAJ]

AXES =                  3
# COORDINATES =         X Y Z R P W
COORDINATES =           X Y Z
HOME =                  0 0 0
LINEAR_UNITS =          0.03937007874016
ANGULAR_UNITS =         1.0
CYCLE_TIME =            0.010
DEFAULT_VELOCITY =      0.0167
MAX_VELOCITY =          1.2
DEFAULT_ACCELERATION =  20.0
MAX_ACCELERATION =      20.0
PROBE_INDEX =           0
PROBE_POLARITY =        1

# Axes sections ---------------------------------------------------------------

# First axis
[AXIS_0]

TYPE =                          LINEAR
UNITS =                         0.03937007874016
HOME =                          0.000
MAX_VELOCITY =                  1.2
MAX_ACCELERATION =              20.0
BACKLASH = 0.000
CYCLE_TIME =                    0.001000
INPUT_SCALE =                   1000    0
OUTPUT_SCALE = 1.000 0.000
MIN_LIMIT =                     -10.0
MAX_LIMIT =                     10.0
FERROR = 1.000
MIN_FERROR = 0.002
HOMING_VEL =                    0.0
# HOME_OFFSET =                   9.5
HOME_OFFSET =                   0.0

# Second axis
[AXIS_1]

TYPE =                          LINEAR
UNITS =                         0.03937007874016
HOME =                          0.000
MAX_VELOCITY =                  1.2
MAX_ACCELERATION =              20.0
BACKLASH =                      0.000
CYCLE_TIME =                    0.001000
INPUT_SCALE =                   1000    0
OUTPUT_SCALE = 1.000 0.000
MIN_LIMIT =                     -10.0
MAX_LIMIT =                     10.0
FERROR = 0.020
MIN_FERROR = 0.001
HOMING_VEL =                    0.0
# HOME_OFFSET =                   9.5
HOME_OFFSET =                   0.0

# Third axis
[AXIS_2]

TYPE =                          LINEAR
UNITS =                         0.03937007874016
HOME =                          0.0
MAX_VELOCITY =                  1.2
MAX_ACCELERATION =              20.0
BACKLASH =                      0.000
CYCLE_TIME =                    0.001000
INPUT_SCALE =                   1000    0
OUTPUT_SCALE = 1.000 0.000
MIN_LIMIT =                     -2.0
MAX_LIMIT =                     4.0
FERROR = 0.020
MIN_FERROR = 0.001
HOMING_VEL =                    0.0
# HOME_OFFSET =                   3.9
HOME_OFFSET =                   0.0

# section for main IO controller parameters -----------------------------------
[EMCIO]

# Name of IO controller program, e.g., bridgeportio
# EMCIO =               bridgeportio
# EMCIO =               minimillio
EMCIO =               simio

# cycle time, in seconds
CYCLE_TIME =    0.100

# tool table file
TOOL_TABLE =    emc.tbl

# address for parallel port used for auxiliary IO
IO_BASE_ADDRESS =    0x278

# wait times in seconds for spindle brake, release
SPINDLE_OFF_WAIT          =     1.0
SPINDLE_ON_WAIT           =     1.5

# external digital inputs, outputs are always 0 for 0V, 1 for 5/24V

# digital in bits

ESTOP_SENSE_INDEX         =     1
LUBE_SENSE_INDEX          =     2

# digital in polarity, 0 is inverted, 1 is normal
# controller compares with polarity, equal means on, not equal means off

ESTOP_SENSE_POLARITY      =     0
LUBE_SENSE_POLARITY       =     1

# digital out bits

SPINDLE_FORWARD_INDEX     =     1
SPINDLE_REVERSE_INDEX     =     0
MIST_COOLANT_INDEX        =     6
FLOOD_COOLANT_INDEX       =     7
SPINDLE_DECREASE_INDEX    =     8
SPINDLE_INCREASE_INDEX    =     9
ESTOP_WRITE_INDEX         =     10
SPINDLE_BRAKE_INDEX       =     11
LUBE_WRITE_INDEX          =     5

# analog out bits

SPINDLE_ON_INDEX          =     3
MIN_VOLTS_PER_RPM         =     -0.001
MAX_VOLTS_PER_RPM         =     0.001042

# digital out polarity, 0 is inverted, 1 is normal
# controller writes the polarity to turn on, opposite of polarity to turn off

SPINDLE_FORWARD_POLARITY  =     0
SPINDLE_REVERSE_POLARITY  =     0
MIST_COOLANT_POLARITY     =     0
FLOOD_COOLANT_POLARITY    =     0
SPINDLE_DECREASE_POLARITY =     1
SPINDLE_INCREASE_POLARITY =     1
ESTOP_WRITE_POLARITY      =     1
SPINDLE_BRAKE_POLARITY    =     0
SPINDLE_ENABLE_POLARITY   =     1
SPINDLE_BRAKE_INDEX       =     11
LUBE_WRITE_POLARITY       =     1
