# core HAL config file for steppers

# first load the stepper module
loadrt stepgen cfg="0 0 0"

# hook its functions to realtime threads
addf stepgen.capture_position servo-thread 1
addf stepgen.update_freq servo-thread -1
addf stepgen.make_pulses base-thread -1

# connect position commands from motion module to step generator
newsig Xpos-cmd float
linksp Xpos-cmd <= axis.0.motor-pos-cmd
linksp Xpos-cmd => stepgen.0.position-cmd
newsig Ypos-cmd float
linksp Ypos-cmd <= axis.1.motor-pos-cmd
linksp Ypos-cmd => stepgen.1.position-cmd
newsig Zpos-cmd float
linksp Zpos-cmd <= axis.2.motor-pos-cmd
linksp Zpos-cmd => stepgen.2.position-cmd

# connect position feedback from step generators
# to motion module
newsig Xpos-fb float
linksp Xpos-fb <= stepgen.0.position-fb
linksp Xpos-fb => axis.0.motor-pos-fb
newsig Ypos-fb float
linksp Ypos-fb <= stepgen.1.position-fb
linksp Ypos-fb => axis.1.motor-pos-fb
newsig Zpos-fb float
linksp Zpos-fb <= stepgen.2.position-fb
linksp Zpos-fb => axis.2.motor-pos-fb

# connect signals to step pulse generator outputs
newsig Xstep bit
newsig Xdir  bit
newsig Ystep bit
newsig Ydir  bit
newsig Zstep bit
newsig Zdir  bit
linkps stepgen.0.step Xstep
linkps stepgen.0.dir  Xdir
linkps stepgen.1.step Ystep
linkps stepgen.1.dir  Ydir
linkps stepgen.2.step Zstep
linkps stepgen.2.dir  Zdir

# set scaling - 1600 steps / rev * 5 turns per inch = 8000
#setp stepgen.0.position-scale 8000
#setp stepgen.1.position-scale 8000
#setp stepgen.2.position-scale 8000

# set scaling - 200 steps / mm = 5080 steps/in
#setp stepgen.0.position-scale 5080
#setp stepgen.1.position-scale 5080
#setp stepgen.2.position-scale 5080

# set scaling - get value from ini file
setp stepgen.0.position-scale [AXIS_0]INPUT_SCALE
setp stepgen.1.position-scale [AXIS_1]INPUT_SCALE
setp stepgen.2.position-scale [AXIS_2]INPUT_SCALE

# Set accel limits (note that these are not the same as
# the limits in emc.ini).  The limits in emc.ini are in
# machine units per second^2 (in this case inches/sec^2)
# While the limits here are in steps per second^2, since
# the stepgen module knows nothing about any units except
# steps.  In addition, these limits must be set higher
# than the machine limits, so that emc doesn't ask the
# stepgen module to accelerate too fast.
#
# FIXME - these should come from the ini file as well, but
# currently they are in units of steps/sec^2, and the ini
# file uses length units / sec^2.  Perhaps stepgen should
# be changed to use length units / sec^2 as well...
setp stepgen.0.maxaccel 150000
setp stepgen.1.maxaccel 150000
setp stepgen.2.maxaccel 150000

# load realtime portion of scope, just to have it handy
loadrt scope_rt

