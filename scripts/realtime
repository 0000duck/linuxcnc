#! /bin/sh

CheckConfig(){
    # Will eventually check in /etc for rtapi.conf
    # as well as the local dir.
    if [ ! -f scripts/rtapi.conf ] ; then
	echo "Missing rtapi.conf. Did you run 'make rtapi' ?"
	exit -1
    else
        # Save the system variable MODPATH so that it can be
        # re-exported on exit.
	old_path=$MODPATH
        # Import the config
	source scripts/rtapi.conf
        # Export the module path specified in the config.
	export MODPATH
	# Generate module lists for loading and unloading
	# lists contain RTOS modules plus RTAPI and HAL
	# unload list is in reverse order
	MODULES_LOAD=
	MODULES_UNLOAD=
	for module in $MODULES ; do
	    MODULES_LOAD="$MODULES_LOAD $module"
	    MODULES_UNLOAD="$module $MODULES_UNLOAD"
	done
	MODULES_LOAD="$MODULES_LOAD $RTLIB_DIR/rtapi.o $RTLIB_DIR/hal_lib.o"
	MODULES_UNLOAD="hal_lib rtapi $MODULES_UNLOAD"
    fi
}

CheckMem(){
# check for user space processes using shared memory
    if [ -e /dev/mbuff ] ; then
	# device file exists, check for processes using it
	if /sbin/fuser -s /dev/mbuff 2>/dev/null; then
	    # at least one process is using it
	    echo "ERROR:  Can't remove RTLinux modules, kill the following process(es) first"
	    /sbin/fuser -v /dev/mbuff 2>/dev/null
	    DoExit
	    exit -1
	fi
    elif [ -e /dev/rtai_shm ] ; then
	# device file exists, check for processes using it
	if /sbin/fuser -s /dev/rtai_shm 2>/dev/null; then
	    # at least one process is using it
	    echo "ERROR:  Can't remove RTAI modules, kill the following process(es) first"
	    /sbin/fuser -v /dev/rtai_shm 2>/dev/null
	    DoExit
	    exit -1
	fi
    fi
}

Load(){
    for MOD in $MODULES_LOAD ; do
	# check to see if the module is already installed
	if ! /sbin/lsmod | awk '{print $1}' | grep -x $MOD >/dev/null ; then
	    # install the module - use insmod
	    /sbin/insmod $MOD 2>/dev/null
	fi
    done
    if [ "$DEBUG" != "" ] && [ -w /proc/rtapi/debug ] ; then
        echo "$DEBUG" > /proc/rtapi/debug
    fi
}

CheckLoaded(){

    # checks to see if rtapi and hal_lib modules were loaded
    # (would like to check all modules, but some may not actually
    #  be required or present on all systems)
    STATUS=
    for module in rtapi hal_lib ; do
	# check to see if the module is installed
	if ! /sbin/lsmod | awk '{print $1}' | grep -x $module >/dev/null ; then
	    echo "ERROR: Could not load '$module'"
	    STATUS=error
	fi
    done
    if [ -n "$STATUS" ] ; then
	exit -1
    fi
}

Unload(){
    # modprobe will unload *all* the modules in one hit
    # (as long as the ordering is the reverse of load order)
    /sbin/modprobe -r $MODULES_UNLOAD 2>/dev/null
}

CheckUnloaded(){

    # checks to see if all modules were unloaded
    STATUS=
    for module in $MODULES_UNLOAD ; do
	# check to see if the module is installed
	if /sbin/lsmod | awk '{print $1}' | grep -x $module >/dev/null ; then
	    echo "ERROR: Could not unload '$module'"
	    STATUS=error
	fi
    done
    if [ -n "$STATUS" ] ; then
	exit -1
    fi
}

DoExit(){
    # Export the original MODPATH
    export MODPATH=$old_path
}

case "$1" in
  start)
	CheckConfig
	CheckMem
	Load
	CheckLoaded
	DoExit
	;;
  restart|reload)
	CheckConfig
	CheckMem
	Unload
	CheckUnloaded
	Load
	CheckLoaded
	DoExit
	;;
  stop)
	CheckConfig
	CheckMem
	Unload
	CheckUnloaded
	DoExit
	;;
  *)
	echo "Usage: $0 {start|stop|restart|reload}" >&2
	exit 1
	;;
esac

exit 0
