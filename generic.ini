# EMC controller parameters for generic stepper controller. Make these what you need
# for your system.

# General section -------------------------------------------------------------
[EMC]

# Version of this INI file
VERSION =               $Revision$

# Name of machine, for use with display, etc.
MACHINE =               Generic

# Name of NML file to use, default is emc.nml
NML_FILE =              generic.nml

# Debug level, 0 means no messages. See emc/src/emcnml/emcglb.h for others
DEBUG =                 0x00000003
# DEBUG =               0x7FFFFFFF

# Startup codes for RS-274-NGC interpreter
RS274NGC_STARTUP_CODE =	G20

# Sections for display options ------------------------------------------------
[DISPLAY]

# Name of display program, e.g., xemc
# DISPLAY =               axis
DISPLAY =             tkemc
# DISPLAY =             yemc
# DISPLAY =             tkemc
# DISPLAY =             keystick
# DISPLAY =             emcpanel

# Cycle time, in seconds, that display will sleep between polls
CYCLE_TIME =            0.200

# Path to help file
HELP_FILE =             doc/help.txt

# Initial display setting for position, RELATIVE or MACHINE
POSITION_OFFSET =       RELATIVE

# Initial display setting for position, COMMANDED or ACTUAL
POSITION_FEEDBACK =     ACTUAL

# Highest value that will be allowed for feed override, 1.0 = 100%
MAX_FEED_OVERRIDE =     3.0

# Startup settings for jog increments when using the mini gui.
# These (0.0001 0.0010 0.0100 0.1000 1.0000) work for linear.
# These (0.01 0.1 1 15 90) work for rotary.
DEFAULT_LINEAR_JOG_INCREMENT = 0.0010
DEFAULT_ROTARY_JOG_INCREMENT = 15

# Prefix to be used
PROGRAM_PREFIX =        programs/

# Introductory graphic
INTRO_GRAPHIC = emc.gif
INTRO_TIME = 5

# Units for display, default would be AUTO
LINEAR_UNITS = AUTO
# LINEAR_UNITS = INCH
# LINEAR_UNITS = MM
# LINEAR_UNITS = CM
ANGULAR_UNITS = AUTO
# ANGULAR_UNITS = DEG
# ANGULAR_UNITS = RAD
# ANGULAR_UNITS = GRAD

# Enable popup balloon help
BALLOON_HELP = 1

# Task controller section -----------------------------------------------------
[TASK]

# Name of task controller program, e.g., bridgeporttask
# TASK =                  bridgeporttask
TASK =                minimilltask

# Cycle time, in seconds, that task controller will sleep between polls
CYCLE_TIME =            0.010

# Part program interpreter section --------------------------------------------
[RS274NGC]

# File containing interpreter variables
PARAMETER_FILE =        generic.var

# Motion control section ------------------------------------------------------
[EMCMOT]

# Name of motion control program
# Don't use an extension with the module name - The script works it out.
# EMCMOT =              smdromod
EMCMOT =              freqmod
# EMCMOT =              vitalmod

# Key for real OS shared memory, e.g., for simulated motion
SHMEM_KEY =             100

# Address for parallel port used for steppers
IO_BASE_ADDRESS =    0x378

# Address for the DRO card if running smdromod
# DRO_BASE_ADDRESS = 0x200

# Timeout for comm to emcmot, in seconds
COMM_TIMEOUT =          1.0

# Interval between tries to emcmot, in seconds
COMM_WAIT =             0.010

# Base task period, in seconds
# Don't use this if steppermot is being used
PERIOD =                0.000024

# Address for motion IO, synchronized with motion start/end
MOTION_IO_ADDRESS =	0x3BC

# Trajectory planner section --------------------------------------------------
[TRAJ]

AXES =                  3
# COORDINATES =         X Y Z R P W
COORDINATES =           X Y Z
HOME =                  0 0 0
LINEAR_UNITS =          0.03937007874016
ANGULAR_UNITS =         1.0
CYCLE_TIME =            0.010
DEFAULT_VELOCITY =      0.0167
MAX_VELOCITY =          1.0
DEFAULT_ACCELERATION =  20.0
MAX_ACCELERATION =      20.0
PROBE_INDEX =           0
PROBE_POLARITY =        1

# Axes sections ---------------------------------------------------------------

# First axis
[AXIS_0]

TYPE =                          LINEAR
UNITS =                         0.03937007874016
HOME =                          0.000
MAX_VELOCITY =                  1.0
# MAX_ACCELERATION =       20
P = 1000.000
I = 0.000
D = 0.000
FF0 = 0.000
FF1 = 0.000
FF2 = 0.000
BACKLASH = 0.000
BIAS = 0.000
MAX_ERROR = 0.000
DEADBAND = 0.0006
CYCLE_TIME =                    0.001000
INPUT_SCALE =                   1000    0
OUTPUT_SCALE = 1000.000 0.000
MIN_LIMIT =                     -10.0
MAX_LIMIT =                     10.0
MIN_OUTPUT =                    -10
MAX_OUTPUT =                    10
FERROR = 1.000
MIN_FERROR = 0.010
HOMING_VEL =                    0.1
SETUP_TIME = 			1
HOLD_TIME =			2
HOME_OFFSET =                   0.0
ENABLE_POLARITY =               0
MIN_LIMIT_SWITCH_POLARITY =     0
MAX_LIMIT_SWITCH_POLARITY =     0
HOME_SWITCH_POLARITY =          1
HOMING_POLARITY =               1
JOGGING_POLARITY =              1
FAULT_POLARITY =                1

# Second axis
[AXIS_1]

TYPE =                          LINEAR
UNITS =                         0.03937007874016
HOME =                          0.000
MAX_VELOCITY =                  1.0
MAX_ACCELERATION =       20
P = 1000.000
I = 0.000
D = 0.000
FF0 = 0.000
FF1 = 0.000
FF2 = 0.000
BACKLASH = 0.000
BIAS = 0.000
MAX_ERROR = 0.000
DEADBAND = 0.0006
CYCLE_TIME =                    0.001000
INPUT_SCALE =                   1000    0
OUTPUT_SCALE = 1000 0.000
MIN_LIMIT =                     -10.0
MAX_LIMIT =                     10.0
MIN_OUTPUT =                    -10
MAX_OUTPUT =                    10
FERROR = 1.000
MIN_FERROR = 0.010
HOMING_VEL =                    0.1
SETUP_TIME = 			1
HOLD_TIME =			2
HOME_OFFSET =                   0.0
ENABLE_POLARITY =               0
MIN_LIMIT_SWITCH_POLARITY =     0
MAX_LIMIT_SWITCH_POLARITY =     0
HOME_SWITCH_POLARITY =          1
HOMING_POLARITY =               1
JOGGING_POLARITY =              1
FAULT_POLARITY =                1

# Third axis
[AXIS_2]

TYPE =                          LINEAR
UNITS =                         0.03937007874016
HOME =                          0.000
MAX_VELOCITY =                  1.0
MAX_ACCELERATION =       20
P = 1000.000
I = 0.000
D = 0.000
FF0 = 0.000
FF1 = 0.000
FF2 = 0.000
BACKLASH = 0.000
BIAS = 0.000
MAX_ERROR = 0.000
DEADBAND = 0.0006
CYCLE_TIME =                    0.001000
INPUT_SCALE =                   1000    0
OUTPUT_SCALE = 1000 0.000
MIN_LIMIT =                     -10.0
MAX_LIMIT =                     10.0
MIN_OUTPUT =                    -10
MAX_OUTPUT =                    10
FERROR = 1.000
MIN_FERROR = 0.010
HOMING_VEL =                    0.1
SETUP_TIME = 			1
HOLD_TIME =			2
HOME_OFFSET =                   0.0
ENABLE_POLARITY =               0
MIN_LIMIT_SWITCH_POLARITY =     0
MAX_LIMIT_SWITCH_POLARITY =     0
HOME_SWITCH_POLARITY =          1
HOMING_POLARITY =               1
JOGGING_POLARITY =              1
FAULT_POLARITY =                1

# section for main IO controller parameters -----------------------------------
[EMCIO]

# Name of IO controller program, e.g., bridgeportio
# EMCIO =                 bridgeportio
EMCIO =               minimillio
# EMCIO =               simio

# cycle time, in seconds
CYCLE_TIME =    0.100

# tool table file
TOOL_TABLE =    generic.tbl

# address for parallel port used for auxiliary IO
IO_BASE_ADDRESS =    0x278

# wait times in seconds for spindle brake, release
SPINDLE_OFF_WAIT          =     1.0
SPINDLE_ON_WAIT           =     1.5

# external digital inputs, outputs are always 0 for 0V, 1 for 5/24V

# digital in bits

ESTOP_SENSE_INDEX         =     1
LUBE_SENSE_INDEX          =     2

# digital in polarity, 0 is inverted, 1 is normal
# controller compares with polarity, equal means on, not equal means off

ESTOP_SENSE_POLARITY      =     0
LUBE_SENSE_POLARITY       =     1

# digital out bits

SPINDLE_FORWARD_INDEX     =     1
SPINDLE_REVERSE_INDEX     =     0
MIST_COOLANT_INDEX        =     6
FLOOD_COOLANT_INDEX       =     7
SPINDLE_DECREASE_INDEX    =     8
SPINDLE_INCREASE_INDEX    =     9
ESTOP_WRITE_INDEX         =     10
SPINDLE_BRAKE_INDEX       =     11
LUBE_WRITE_INDEX          =     5

# analog out bits

SPINDLE_ON_INDEX          =     3
MIN_VOLTS_PER_RPM         =     -0.001
MAX_VOLTS_PER_RPM         =     0.001

# digital out polarity, 0 is inverted, 1 is normal
# controller writes the polarity to turn on, opposite of polarity to turn off

SPINDLE_FORWARD_POLARITY  =     0
SPINDLE_REVERSE_POLARITY  =     0
MIST_COOLANT_POLARITY     =     0
FLOOD_COOLANT_POLARITY    =     0
SPINDLE_DECREASE_POLARITY =     1
SPINDLE_INCREASE_POLARITY =     1
ESTOP_WRITE_POLARITY      =     1
SPINDLE_BRAKE_POLARITY    =     0
SPINDLE_ENABLE_POLARITY   =     1
LUBE_WRITE_POLARITY       =     1


# section for external NML server parameters ----------------------------------
[EMCSERVER]

# Name of NML server, e.g., emcsvr# if not found then none will run
# EMCSERVER =           emcsvr

# section for emc stripchart  parameters ----------------------------------
[EMCSTRIP]

# Name of strip chart display program e.g.  emcstripchart
# if not found then none will run
# EMCSTRIP =            emcstripchart

# OPTIONS for emcstripchart ussually -f something.conf# This file says which
# variables to plot, colors etc. -u  changes the update rate.
OPTIONS = -f emcstrip.conf.ferror
