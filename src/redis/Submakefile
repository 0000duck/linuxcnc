ifeq ($(REDIS_INSTALL_USABLE),no)

INCLUDES += redis/redis/deps/hiredis redis/redis/deps/linenoise

# do not depend on redis/redis/src/release.{c,h} - these are autogenerated on each build
REDIS_SERVER_SRCS := $(filter-out redis/redis/src/release.c,$(wildcard redis/redis/src/*.c))
REDIS_SERVER_INCLUDES := $(filter-out release.h,$(wildcard redis/redis/src/*.h \
	redis/redis/deps/hiredis/*.h \
	redis/redis/deps/jmalloc/*.h \
	redis/deps/jemalloc/include/*.h \
	redis/redis/deps/linenoise/*.h \
	redis/redis/deps/lua/*.h ))

LIBHIREDIS_SRCS := $(wildcard redis/redis/deps/hiredis/*.c)
LIBHIREDIS_INCLUDES := $(wildcard redis/redis/deps/hiredis/*.h redis/redis/deps/hiredis/adapters/*.h )

REDIS_PY_SRCS +=  $(notdir $(basename $(wildcard redis/redis-py/redis/*.py)))
USERSRCS += $(LIBHIREDIS_SRCS)
USERSRCS += $(REDIS_SERVER_SRCS)

TARGETS +=  ../lib/libhiredis.a ../bin/redis-server \
	../lib/python/redis/__init__.py \
	$(patsubst %,../lib/python/redis/%.py,$(REDIS_PY_SRCS))

../include/%.h: ./redis/redis/deps/hiredis/%.h
	cp $^ $@

# use redis supplied Makefile for now
../bin/redis-server: $(REDIS_SERVER_SRCS) $(REDIS_SERVER_INCLUDES) $(LIBHIREDIS_INCLUDES)
	(cd redis/redis; \
	cd deps/linenoise; \
	make ; \
	cd ../.. ; \
	make all ;\
	cd src; \
	make INSTALL_BIN=../../../../bin dep install)

# use hiredis supplied Makefile for now
../lib/libhiredis.a: $(LIBHIREDIS_SRCS) $(LIBHIREDIS_INCLUDES)
	(cd  redis/redis/deps/hiredis/; \
	make -f Makefile \
		INSTALL_INCLUDE_PATH=../../../../../include \
		INSTALL_LIBRARY_PATH=../../../../../lib \
		install \
	)

# redis-py install
../lib/python/redis/__init__.py: redis/redis-py/redis/__init__.py
	$(Q)mkdir -p ../lib/python/redis
	$(Q)cp $< $@

../lib/python/redis/%: redis/redis-py/redis/%
	@$(ECHO) Syntax checking python script $(notdir $@)
	$(Q)$(PYTHON) -c 'import sys; compile(open(sys.argv[1]).read(), sys.argv[1], "exec")' $<
	$(ECHO) Copying python script $(notdir $@)
	$(Q)mkdir -p ../lib/python/touchy
	$(Q)cp $< $@

endif
