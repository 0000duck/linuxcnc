component lowpass "Low-pass filter";
notes """
The digital filter implemented is equivalent to a unity-gain
continuous-time single-pole low-pass filter that is preceded
by a zero-order-hold and sampled at a fixed period.  For a pole
at **-a** (radians/seconds) the corresponding continuous-time
lowpass filter LaPlace transfer function is:

[verse]
**H(s) = a/(s + a)**

For a sampling period **T** (seconds), the gain for this
Hal lowpass component is:

[verse]
**gain = 1 - exp(-a * T)**

== EXAMPLE GAIN VALUES

All examples are for a 1kHz thread period,
[verse]
T = 0.001 seconds

For 100Hz bandwidth single pole,

[verse]
a = (2*pi*100)
gain = **0.466**

For 10Hz bandwidth single pole,

[verse]
a = (2*pi*10)
gain = **0.0609**

For 1Hz bandwidth single pole,

[verse]
a = (2*pi*1)
gain = **0.0063**

""";
pin in float in;
pin out float out " out += (in - out) * gain ";
pin in bit load "When TRUE, copy **in** to **out** instead of applying the filter equation.";
param rw float gain;
function _;
license "GPL";
notes "The effect of a specific **gain** value is dependent on the period of the function that **lowpass.__N__** is added to";
option asciidoc;
;;
FUNCTION(_) {
    if(load)
	out = in;
    else
	out += (in - out) * gain;
}
