//   This is a component for EMC2 HAL
//   Copyright 2006 Jeff Epler <jepler@unpythonic.net>
//
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation; either version 2 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
component edge "Edge detector";

pin in bit in;
pin out bit out "Goes high when the desired edge is seen on 'in'";
pin out_invert bit out "Goes low when the desired edge is seen on 'in'";

param in_edge bit rw "Selects the desired edge: TRUE means falling, FALSE means rising";
param out_width float rw "Time in seconds of the output pulse";

param time_left float r "Time left in this output pulse";
param last_in bit r "Previous input value";

function _ "Produce output pulses from input edges";
;;
MODULE_LICENSE("GPL");

FUNCTION(_){ 
    int new_in = in;
    if(in_edge) new_in = ! new_in;
    if(new_in && new_in != last_in) {
        time_left = out_width;
        out = 1; out_invert = 0;
    } else if(time_left > 0) {
        time_left -= fperiod;
        out = 1; out_invert = 0;
    } else {
        time_left = 0;
        out = 0; out_invert = 1;
    }
    last_in = new_in;
}

