#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
# 
# This file is adapted to replace the old ./configure script
# therefor it includes parts of that script

AC_PREREQ(2.57)
AC_INIT(EMC2, 0.1, emc-developer@lists.sourceforge.net)
AC_CONFIG_SRCDIR([src/hal/hal_lib.c])

# Checks for programs.

# Check for RT
# FIXME - add RT-check script
# accept rtai=path from commandline
# accept rtlinux=path from commandline
# accept rtlinuxpro=path from commandline
AC_MSG_CHECKING([for RT dir])
RTDIR=""
RTNAME=""
RTAI=""
RTLINUX=""
RTLINUXPRO=""
RTPREFIX=""
KERNELDIR=""
RTFLAGS=""

AC_ARG_WITH(rtai,
    [  --with-rtai=<path to RTAI>			path where RTAI is installed],
    [	case "$withval" in
	"" | y | ye | yes | n | no)
	    AC_MSG_ERROR([You must supply an argument to --with-rtai.])
	  ;;
	esac
	RTAIDIR="$withval"])

if (! test -z "$RTAIDIR") ; then
  RTDIR=$RTAIDIR
  AC_MSG_NOTICE([specified rtai=$RTDIR])
fi

AC_ARG_WITH(rtlinux,
    [  --with-rtlinux=<path to RTLINUX>		path where RTLinux is installed],
    [	case "$withval" in
	"" | y | ye | yes | n | no)
	    AC_MSG_ERROR([You must supply an argument to --with-rtlinux.])
	  ;;
	esac
	RTLINUXDIR="$withval"])

if (! test -z "$RTLINUXDIR") ; then
  if (! test -z "$RTDIR") ; then 
    AC_MSG_ERROR([rtai=$RTAIDIR & rtlinux=$RTLINUXDIR defined. Only one is possible])
  else
    RTDIR=$RTLINUXDIR
    AC_MSG_NOTICE([specified rtlinux=$RTDIR])
  fi
fi

AC_ARG_WITH(rtlinuxpro,
    [  --with-rtlinuxpro=<path to RTLINUXPRO>	path where RTLinuxPro is installed],
    [	case "$withval" in
	"" | y | ye | yes | n | no)
	    AC_MSG_ERROR([You must supply an argument to --with-rtlinuxpro.])
	  ;;
	esac
	RTLINUXPRODIR="$withval"])

if (! test -z "$RTLINUXPRODIR") ; then
  if (! test -z "$RTDIR") ; then 
    AC_MSG_ERROR([rtdir=$RTDIR & rtlinuxpro=$RTLINUXPRODIR defined. Only one is possible])
  else
    RTDIR=$RTLINUXPRODIR
    AC_MSG_NOTICE([specified rtlinuxpro=$RTDIR])
  fi
fi

#at this point if RTDIR is empty, we need to find RT ourselves
if (test -z "$RTDIR" ); then
  RTS=$(find /usr/* -maxdepth 3 -name "rtl-config" -o -name "rtai-config" 2>/dev/null)
  if (test "$RTS" = "" ) ; then
    AC_MSG_ERROR([RT not found, try to specify one by --with-rtai=<path>, --with-rtlinux=<path>, --with-rtlinuxpro=<path>])
  elif (test `echo "$RTS" | wc -l` != 1 ) ; then
    AC_MSG_ERROR([Multiple RT signatures found, try to specify one by --with-rtai=<path>, --with-rtlinux=<path>, --with-rtlinuxpro=<path>])
  elif (test `echo $RTS | awk -F / ' {print $NF}'` = "rtai-config") ; then
    #we have found rtai-config
    #probably version 3
    RTNAME=rtai-3.0
    RTPREFIX=rtai
    RTAI=3
    RTDIR=`$RTS --prefix`
    RTDIR=$(cd $RTDIR ; pwd -P )
    RTFLAGS=`$RTS --module-cflags` 
    RTFLAGS="$RTFLAGS -DRTAI=3"
    KERNELDIR=`$RTS --linux-dir`
    AC_MSG_RESULT([rtai=$RTDIR set from search])
  else
    #we have found rtl-config
    RTPREFIX=rtlinux
    RTDIR=`$RTS --prefix`
    RTDIR=$(cd $RTDIR ; pwd -P )
    RTFLAGS=`$RTS --c-flags`
    KERNELDIR=`$RTS --linux`
  fi
else
  # we have RTDIR from the user... let's check for rtai-config, rtl-config
  RTDIR=$(cd $RTDIR ; pwd -P )
  if (! test "x$RTAIDIR" = "x") ; then
    if (test -r $RTDIR/rtai-config); then
       # found rtai-config
       RTS=$RTDIR/rtai-config
    elif (test -r $RTDIR/bin/rtai-config); then
       RTS=$RTDIR/bin/rtai-config
    elif (test `rtai-config --version 2> /dev/null`); then
       RTS=rtai-config
    fi
    RTNAME=rtai-3.0
    RTPREFIX=rtai
    RTAI=3
    RTDIR=`$RTS --prefix`
    RTDIR=$(cd $RTDIR ; pwd -P )
    RTFLAGS=`$RTS --module-cflags`
    RTFLAGS="$RTFLAGS -DRTAI=3"
    KERNELDIR=`$RTS --linux-dir`
  elif (! test "x$RTLINUXDIR" = "x") ; then
    #FIXME add rtl-config
    RTNAME=rtlinux
    RTPREFIX=rtlinux
    RTDIR=$(cd $RTDIR ; pwd -P )
  fi
  AC_MSG_RESULT([$RTDIR set from command line])
fi
AC_SUBST([RTNAME])
AC_SUBST([RTAI])
AC_SUBST([RTLINUX])
AC_SUBST([RTLINUXPRO])
AC_SUBST([RTPREFIX])
AC_SUBST([KERNELDIR])
AC_SUBST([RTFLAGS])
AC_SUBST([RTDIR])

# Check for emc2 dir
# FIXME
# right now... not done
# just output the current directory as emc2 home
# needs some discussions & adjustments

EMC2_HOME=`pwd`
AC_SUBST([EMC2_HOME])

# Support some of the standard configure options for directories
AC_PREFIX_DEFAULT(/usr/local)	# Does this become /opt/emc2 ?

if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

AC_SUBST(AUTODIRS)


# Check CC version - (P.C.) We need to verify the compiler is the same one used
# for the realtime extensions... Hence the need to find the RT signature first.
# if version is gcc-2.96 check for alternative
AC_MSG_CHECKING(for cc version)
AC_PROG_CC(gcc)
if test -z "$CC"; then
  AC_PROG_CC(egcs)
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found])
else
  if test `$CC -dumpversion` = "2.96"; then
    AC_MSG_ERROR([gcc version 2.96 found, but not supported])
  fi
fi

AC_PROG_CXX
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CHECK_PROGS(AR,ar)

# Check for GTK
# accept GTK_VER from command line
AC_MSG_CHECKING([for GTK version])

AC_ARG_WITH(gtk_ver,
    [  --with-gtk_ver=<GTK-version>      GTK version],
    [
	case "$withval" in
	"" | y | ye | yes | n | no)
	    AC_MSG_ERROR([You must supply an argument to --with-gtk_ver.])
	  ;;
	esac
	GTK_VER="$withval"
    ])

if test "x" = "x$GTK_VER"; then
  #we need to find out GTK_VER ourselves
  GTK_VER="none"
  if type gtk-config 2>/dev/null >/dev/null ; then
    # found gtk-config, that means GTK 1.2 is installed
    GTK_VER="1.2"
  elif type pkg-config 2>/dev/null >/dev/null ; then
    # found pkg-config, that means GTK 2.x _might_ be installed
    if pkg-config gtk+-2.0 --exists ; then
      # found the .pc file for gtk-2.0
      GTK_VER="2.0"
    elif pkg-config gtk+-2.2 --exists ; then
      # found the .pc file for gtk-2.2
      GTK_VER="2.2"
    fi
  fi
fi
AC_MSG_RESULT([$GTK_VER])
if (! test "none" = "$GTK_VER") ; then
  GTK_CFLAGS=`gtk-config --cflags`
  GTK_LIBS=`gtk-config --libs`
else
  GTK_CFLAGS=""
  GTK_LIBS=""
  GTK_VER=""
fi
AC_SUBST(GTK_VER)
AC_SUBST(GTK_LIBS)
AC_SUBST(GTK_CFLAGS)

# Check for Man dir
AC_MSG_CHECKING([for directory to install man-pages])

#check for $MANPATH
if test -z "$MANPATH"; then
  MANDIR=`manpath | awk -F: '{ print $1 }'`
  # test the result, make sure it's a directory
  if ( ! test  -d $MANDIR ) ; then
    MANDIR=
  fi
else
  MANDIR=`echo $MANPATH | awk -F: '{ print $1 }'`
fi
if test -z "$MANDIR"; then
  AC_MSG_WARN([not found])
else
  AC_MSG_RESULT([$MANDIR])
fi
AC_SUBST([MANDIR])

# Check for math support
# FIXME - still to be written
# Because some of the realtime kernel modules use floating point math
# which is not supported by standard kernel calls, we need to link to
# libm. RTAI provides a loadable module derived from uclibc (a minimal
# glibc implimentaion for embedded systems). Alternatively, we can link
# to dietlibc - Most distros package this as diet or dietlibc. Debian
# splits the headers and static libs into dietlibc-dev..
# If neither of the two preferred options are available, then the default
# GNU glibc math library will have to be used. This will cause problems
# if certain functions found in libc.so are not stubbed, hence the following
# tests and linking to mathstubs.o at a later stage.
AC_MSG_CHECKING([for kernel math support])

if (test -r $RTDIR/modules/rtai_libm.o ) || (test -r $($RTS --module-dir)/rtai_math.o ) ; then
    # Found a suitable kernel module..
    MATHLIB=
    USE_RTLIBM=1
    AC_MSG_RESULT([ok, using RTAI's libm kernel module])
# Note: need to search /lib/modules/`uname -r` for the math modules..
else
    AC_MSG_RESULT([no])
    AC_MSG_CHECKING([for a suitable libm])
    rm -f src/tests/mathtest.o src/tests/mathtest 2>/dev/null
    # compile a sample first.
    $CC -O -c src/tests/mathtest.c -o src/tests/mathtest.o 2>/dev/null

    DIET_DIR=$(find /usr/lib -maxdepth 2 -name diet* | head -n1)
    if (test "$DIET_DIR" != "" ) ; then
        # Run a test to see if it will work...
        ld -r -static src/tests/mathtest.o -o src/tests/mathtest -L$DIET_DIR/lib-i386 -lm 2>/dev/null
        if (test "$(nm -u src/tests/mathtest | grep -v ende)" = "" ) ; then
            AC_MSG_RESULT([diet lib OK to use.])
            USE_DIET=1
            MATHLIB="-L$DIET_DIR/lib-i386 -lm"
            MATHINC="-I$DIET_DIR/include"
        fi
    fi
    if (test "$USE_DIET" = "" ) ; then
        # Test the standard libm
    rm -f src/tests/mathtest 2>/dev/null
    ld -r -static src/tests/mathtest.o -o src/tests/mathtest -L/usr/lib -lm 2>/dev/null
        if ! nm -u src/tests/mathtest ; then
            AC_MSG_RESULT([libm OK to use.])
            USE_LIBM=1
            MATHLIB="-L/usr/lib -lm"
        else
            # We need to link to mathstubs if we are to use the glibc libm
            AC_MSG_WARN([Using glibc libm with mathstubs.
			If unresolved symbols are reported when loading kernel modules
			please file a bug report.])
            USE_LIBM=1
	    USE_STUBS=1
            MATHLIB="\$(RTTMP_DIR)/mathstubs.o -L/usr/lib -lm"
        fi
    fi
    rm -f src/tests/mathtest.o src/tests/mathtest 2>/dev/null
fi

AC_SUBST([USE_LIBM])
AC_SUBST([USE_STUBS])
AC_SUBST([USE_RTLIBM])
AC_SUBST([MATHINC])
AC_SUBST([MATHLIB])

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([tcl.h tk.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.
AC_SEARCH_LIBS(Tcl_Init,[tcl tcl8.4],[],[AC_MSG_ERROR([tcl lib not found])])
AC_SEARCH_LIBS(Tk_Init,[tk tk8.4],[],[AC_MSG_ERROR([tk lib not found])])

DATE=$(date)
AC_SUBST([DATE])

AC_CONFIG_FILES([Makefile.inc])
AC_OUTPUT
